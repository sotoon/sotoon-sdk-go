// Package iam provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package iam

import (
	"time"

	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	Bearer_TokenScopes = "Bearer_Token.Scopes"
)

// AcceptInvitationJSONBody defines parameters for AcceptInvitation.
type AcceptInvitationJSONBody struct {
	// Name Full name of the user
	Name *string `json:"name,omitempty"`

	// Password Password for the new account
	Password *string `json:"password,omitempty"`
}

// CreateAuthTokenWithCredJSONBody defines parameters for CreateAuthTokenWithCred.
type CreateAuthTokenWithCredJSONBody struct {
	// Captcha Captcha response if required
	Captcha *string `json:"captcha,omitempty"`

	// Email Email address of the user
	Email *openapi_types.Email `json:"email,omitempty"`

	// Password User's password
	Password *string `json:"password,omitempty"`

	// Remember Whether to create a long-lived token
	Remember *bool `json:"remember,omitempty"`
}

// CreateAuthTokenWithChallengeJSONBody defines parameters for CreateAuthTokenWithChallenge.
type CreateAuthTokenWithChallengeJSONBody struct {
	// ChallengeAnswer Answer to the challenge
	ChallengeAnswer *string `json:"challenge_answer,omitempty"`

	// ChallengeToken Token received from the challenge request
	ChallengeToken *string `json:"challenge_token,omitempty"`

	// Remember Whether to create a long-lived token
	Remember *bool `json:"remember,omitempty"`
}

// GetThirdPartyAccessTokenJSONBody defines parameters for GetThirdPartyAccessToken.
type GetThirdPartyAccessTokenJSONBody struct {
	// ClientId Client ID for the third-party service
	ClientId *string `json:"client_id,omitempty"`

	// ClientSecret Client secret for the third-party service
	ClientSecret *string `json:"client_secret,omitempty"`

	// Code Authorization code from the third-party service
	Code *string `json:"code,omitempty"`

	// RedirectUri Redirect URI used in the authorization request
	RedirectUri *string `json:"redirect_uri,omitempty"`

	// State State parameter used in the authorization request
	State *string `json:"state,omitempty"`
}

// ChangePasswordJSONBody defines parameters for ChangePassword.
type ChangePasswordJSONBody struct {
	// Password New password for the user
	Password *string `json:"password,omitempty"`
}

// ResetPasswordJSONBody defines parameters for ResetPassword.
type ResetPasswordJSONBody struct {
	// Email Email address of the user account to reset password for
	Email *string `json:"email,omitempty"`
}

// BulkCanUserJSONBody defines parameters for BulkCanUser.
type BulkCanUserJSONBody = []struct {
	// Actions List of actions to check permissions for
	Actions *[]string `json:"actions,omitempty"`

	// Path The path within the service to check permissions for
	Path *string `json:"path,omitempty"`

	// Service The service name to check permissions for
	Service *string `json:"service,omitempty"`
}

// EnableUserOtpJSONBody defines parameters for EnableUserOtp.
type EnableUserOtpJSONBody struct {
	// Code Verification code to confirm OTP setup
	Code *string `json:"code,omitempty"`

	// Secret OTP secret
	Secret *string `json:"secret,omitempty"`
}

// CreateUserPublicKeyJSONBody defines parameters for CreateUserPublicKey.
type CreateUserPublicKeyJSONBody struct {
	// CreatedAt Timestamp when the public key was created
	CreatedAt *time.Time `json:"created_at,omitempty"`

	// Key The public key content in SSH format
	Key *string `json:"key,omitempty"`

	// Title Title or name for the public key
	Title *string `json:"title,omitempty"`

	// UpdatedAt Timestamp when the public key was last updated
	UpdatedAt *time.Time `json:"updated_at,omitempty"`

	// User The user this public key belongs to
	User *struct {
		// CreatedAt Timestamp when the user was created
		CreatedAt *time.Time `json:"created_at,omitempty"`

		// Email Email address of the user
		Email *string `json:"email,omitempty"`

		// Name Full name of the user
		Name *string `json:"name,omitempty"`

		// UpdatedAt Timestamp when the user was last updated
		UpdatedAt *time.Time `json:"updated_at,omitempty"`

		// Uuid Unique identifier for the user
		Uuid *string `json:"uuid,omitempty"`
	} `json:"user,omitempty"`

	// Uuid Unique identifier for the public key
	Uuid *string `json:"uuid,omitempty"`
}

// CreateUserTokenJSONBody defines parameters for CreateUserToken.
type CreateUserTokenJSONBody struct {
	// ExpiresAt Token expiration timestamp
	ExpiresAt *time.Time `json:"expires_at,omitempty"`

	// Token Authentication token
	Token *string `json:"token,omitempty"`

	// UserUuid UUID of the authenticated user
	UserUuid *string `json:"user_uuid,omitempty"`
}

// CreateBackupKeyJSONBody defines parameters for CreateBackupKey.
type CreateBackupKeyJSONBody struct {
	// CreatedAt Timestamp when the backup key was created
	CreatedAt *time.Time `json:"created_at,omitempty"`

	// Key The SSH key content in SSH format
	Key *string `json:"key,omitempty"`

	// Title Title or name for the backup key
	Title *string `json:"title,omitempty"`

	// UpdatedAt Timestamp when the backup key was last updated
	UpdatedAt *time.Time `json:"updated_at,omitempty"`

	// Uuid Unique identifier for the backup key
	Uuid *string `json:"uuid,omitempty"`

	// Workspace The workspace this backup key belongs to
	Workspace *string `json:"workspace,omitempty"`
}

// CreateGroupJSONBody defines parameters for CreateGroup.
type CreateGroupJSONBody struct {
	// CreatedAt Timestamp when the group was created
	CreatedAt *time.Time `json:"created_at,omitempty"`

	// Description Optional description of the group's purpose
	Description *string `json:"description,omitempty"`

	// Name Name of the group
	Name *string `json:"name,omitempty"`

	// UpdatedAt Timestamp when the group was last updated
	UpdatedAt *time.Time `json:"updated_at,omitempty"`

	// Uuid Unique identifier for the group
	Uuid *string `json:"uuid,omitempty"`
}

// UpdateGroupJSONBody defines parameters for UpdateGroup.
type UpdateGroupJSONBody struct {
	// CreatedAt Timestamp when the group was created
	CreatedAt *time.Time `json:"created_at,omitempty"`

	// Description Optional description of the group's purpose
	Description *string `json:"description,omitempty"`

	// Name Name of the group
	Name *string `json:"name,omitempty"`

	// UpdatedAt Timestamp when the group was last updated
	UpdatedAt *time.Time `json:"updated_at,omitempty"`

	// Uuid Unique identifier for the group
	Uuid *string `json:"uuid,omitempty"`
}

// BulkAddServiceUsersToGroupJSONBody defines parameters for BulkAddServiceUsersToGroup.
type BulkAddServiceUsersToGroupJSONBody struct {
	// ServiceUsers List of service user UUIDs to add to the group
	ServiceUsers *[]string `json:"service_users,omitempty"`
}

// BulkAddUsersToGroupJSONBody defines parameters for BulkAddUsersToGroup.
type BulkAddUsersToGroupJSONBody struct {
	// Users List of user UUIDs to add to the group
	Users *[]string `json:"users,omitempty"`
}

// AddServiceUserToGroupJSONBody defines parameters for AddServiceUserToGroup.
type AddServiceUserToGroupJSONBody struct {
	// CreatedAt Timestamp when the service user was created
	CreatedAt *time.Time `json:"created_at,omitempty"`

	// Name Name of the service user
	Name *string `json:"name,omitempty"`

	// UpdatedAt Timestamp when the service user was last updated
	UpdatedAt *time.Time `json:"updated_at,omitempty"`

	// Uuid Unique identifier for the service user
	Uuid *string `json:"uuid,omitempty"`
}

// AddUserToGroupJSONBody defines parameters for AddUserToGroup.
type AddUserToGroupJSONBody struct {
	// CreatedAt Timestamp when the user was created
	CreatedAt *time.Time `json:"created_at,omitempty"`

	// Email Email address of the user
	Email *string `json:"email,omitempty"`

	// Name Full name of the user
	Name *string `json:"name,omitempty"`

	// UpdatedAt Timestamp when the user was last updated
	UpdatedAt *time.Time `json:"updated_at,omitempty"`

	// Uuid Unique identifier for the user
	Uuid *string `json:"uuid,omitempty"`
}

// InviteUsersToWorkspaceJSONBody defines parameters for InviteUsersToWorkspace.
type InviteUsersToWorkspaceJSONBody struct {
	// Emails List of email addresses to invite to the workspace
	Emails *[]string `json:"emails,omitempty"`
}

// BulkAddRulesToRoleJSONBody defines parameters for BulkAddRulesToRole.
type BulkAddRulesToRoleJSONBody struct {
	// RulesUuidList List of UUIDs of the Rule objects to add to the role
	RulesUuidList *[]interface{} `json:"rules_uuid_list,omitempty"`
}

// BulkAddServiceUsersToRoleJSONBody defines parameters for BulkAddServiceUsersToRole.
type BulkAddServiceUsersToRoleJSONBody struct {
	// Items List of items needed for role bindings
	Items *[]interface{} `json:"items,omitempty"`

	// ServiceUsers List of service user UUIDs to assign to the role
	ServiceUsers *[]string `json:"service_users,omitempty"`
}

// BulkAddUsersToRoleJSONBody defines parameters for BulkAddUsersToRole.
type BulkAddUsersToRoleJSONBody struct {
	// Items List of items needed for role bindings
	Items *[]interface{} `json:"items,omitempty"`

	// Users List of user UUIDs to assign to the role
	Users *[]string `json:"users,omitempty"`
}

// AddRuleToRoleJSONBody defines parameters for AddRuleToRole.
type AddRuleToRoleJSONBody struct {
	// Action Action this rule controls
	Action *string `json:"action,omitempty"`

	// CreatedAt Timestamp when the rule was created
	CreatedAt *time.Time `json:"created_at,omitempty"`

	// Description Description of the rule's purpose
	Description *string `json:"description,omitempty"`

	// Name Name of the rule
	Name *string `json:"name,omitempty"`

	// Resource Resource this rule applies to
	Resource *string `json:"resource,omitempty"`

	// Service Service this rule applies to
	Service *string `json:"service,omitempty"`

	// UpdatedAt Timestamp when the rule was last updated
	UpdatedAt *time.Time `json:"updated_at,omitempty"`

	// Uuid Unique identifier for the rule
	Uuid *string `json:"uuid,omitempty"`
}

// AssignRoleToServiceUserJSONBody defines parameters for AssignRoleToServiceUser.
type AssignRoleToServiceUserJSONBody struct {
	// Items Optional items associated with this role binding
	Items interface{} `json:"items,omitempty"`
}

// AssignRoleToUserJSONBody defines parameters for AssignRoleToUser.
type AssignRoleToUserJSONBody struct {
	// Items Optional items associated with this role binding
	Items interface{} `json:"items,omitempty"`
}

// CreateRuleJSONBody defines parameters for CreateRule.
type CreateRuleJSONBody struct {
	// Action Action this rule controls
	Action *string `json:"action,omitempty"`

	// CreatedAt Timestamp when the rule was created
	CreatedAt *time.Time `json:"created_at,omitempty"`

	// Description Description of the rule's purpose
	Description *string `json:"description,omitempty"`

	// Name Name of the rule
	Name *string `json:"name,omitempty"`

	// Resource Resource this rule applies to
	Resource *string `json:"resource,omitempty"`

	// Service Service this rule applies to
	Service *string `json:"service,omitempty"`

	// UpdatedAt Timestamp when the rule was last updated
	UpdatedAt *time.Time `json:"updated_at,omitempty"`

	// Uuid Unique identifier for the rule
	Uuid *string `json:"uuid,omitempty"`
}

// UpdateRuleJSONBody defines parameters for UpdateRule.
type UpdateRuleJSONBody struct {
	// Action Action this rule controls
	Action *string `json:"action,omitempty"`

	// CreatedAt Timestamp when the rule was created
	CreatedAt *time.Time `json:"created_at,omitempty"`

	// Description Description of the rule's purpose
	Description *string `json:"description,omitempty"`

	// Name Name of the rule
	Name *string `json:"name,omitempty"`

	// Resource Resource this rule applies to
	Resource *string `json:"resource,omitempty"`

	// Service Service this rule applies to
	Service *string `json:"service,omitempty"`

	// UpdatedAt Timestamp when the rule was last updated
	UpdatedAt *time.Time `json:"updated_at,omitempty"`

	// Uuid Unique identifier for the rule
	Uuid *string `json:"uuid,omitempty"`
}

// CreateServiceUserJSONBody defines parameters for CreateServiceUser.
type CreateServiceUserJSONBody struct {
	// Description Optional description of the service user
	Description *string `json:"description,omitempty"`

	// Name Name of the service user
	Name *string `json:"name,omitempty"`
}

// UpdateServiceUserJSONBody defines parameters for UpdateServiceUser.
type UpdateServiceUserJSONBody struct {
	// CreatedAt Timestamp when the service user was created
	CreatedAt *time.Time `json:"created_at,omitempty"`

	// Name Name of the service user
	Name *string `json:"name,omitempty"`

	// UpdatedAt Timestamp when the service user was last updated
	UpdatedAt *time.Time `json:"updated_at,omitempty"`

	// Uuid Unique identifier for the service user
	Uuid *string `json:"uuid,omitempty"`
}

// CreateServiceUserKiseKeyJSONBody defines parameters for CreateServiceUserKiseKey.
type CreateServiceUserKiseKeyJSONBody struct {
	// CreatedAt Timestamp when the KISE key was created
	CreatedAt *time.Time `json:"created_at,omitempty"`

	// Key The KISE key content
	Key *string `json:"key,omitempty"`

	// ServiceUser The service user this KISE key belongs to
	ServiceUser *struct {
		// CreatedAt Timestamp when the service user was created
		CreatedAt *time.Time `json:"created_at,omitempty"`

		// Name Name of the service user
		Name *string `json:"name,omitempty"`

		// UpdatedAt Timestamp when the service user was last updated
		UpdatedAt *time.Time `json:"updated_at,omitempty"`

		// Uuid Unique identifier for the service user
		Uuid *string `json:"uuid,omitempty"`
	} `json:"service_user,omitempty"`

	// Title Title or name for the KISE key
	Title *string `json:"title,omitempty"`

	// UpdatedAt Timestamp when the KISE key was last updated
	UpdatedAt *time.Time `json:"updated_at,omitempty"`

	// Uuid Unique identifier for the KISE key
	Uuid *string `json:"uuid,omitempty"`

	// Workspace The workspace this KISE key belongs to
	Workspace *string `json:"workspace,omitempty"`
}

// CreateServiceUserPublicKeyJSONBody defines parameters for CreateServiceUserPublicKey.
type CreateServiceUserPublicKeyJSONBody struct {
	// Key The public key content in SSH format
	Key *string `json:"key,omitempty"`

	// Title Title or name for the public key
	Title *string `json:"title,omitempty"`
}

// CreateServiceUserTokenJSONBody defines parameters for CreateServiceUserToken.
type CreateServiceUserTokenJSONBody struct {
	// CreatedAt Timestamp when the token was created
	CreatedAt *time.Time `json:"created_at,omitempty"`

	// ExpiresAt Timestamp when the token will expire
	ExpiresAt *time.Time `json:"expires_at,omitempty"`

	// Name Name of the token
	Name *string `json:"name,omitempty"`

	// Secret The secret value of the token
	Secret *string `json:"secret,omitempty"`

	// ServiceUser The service user this token belongs to
	ServiceUser *struct {
		// CreatedAt Timestamp when the service user was created
		CreatedAt *time.Time `json:"created_at,omitempty"`

		// Name Name of the service user
		Name *string `json:"name,omitempty"`

		// UpdatedAt Timestamp when the service user was last updated
		UpdatedAt *time.Time `json:"updated_at,omitempty"`

		// Uuid Unique identifier for the service user
		Uuid *string `json:"uuid,omitempty"`
	} `json:"service_user,omitempty"`

	// Uuid Unique identifier for the token
	Uuid *string `json:"uuid,omitempty"`
}

// BulkRefreshThirdPartyTokensJSONBody defines parameters for BulkRefreshThirdPartyTokens.
type BulkRefreshThirdPartyTokensJSONBody struct {
	// TokenIds List of token identifiers to refresh
	TokenIds *[]string `json:"token_ids,omitempty"`
}

// AllowUserJSONBody defines parameters for AllowUser.
type AllowUserJSONBody struct {
	// CreatedAt Timestamp when the user was created
	CreatedAt *time.Time `json:"created_at,omitempty"`

	// Email Email address of the user
	Email *string `json:"email,omitempty"`

	// Name Full name of the user
	Name *string `json:"name,omitempty"`

	// UpdatedAt Timestamp when the user was last updated
	UpdatedAt *time.Time `json:"updated_at,omitempty"`

	// Uuid Unique identifier for the user
	Uuid *string `json:"uuid,omitempty"`
}

// CreateUserKiseKeyJSONBody defines parameters for CreateUserKiseKey.
type CreateUserKiseKeyJSONBody struct {
	// CreatedAt Timestamp when the KISE key was created
	CreatedAt *time.Time `json:"created_at,omitempty"`

	// Key The KISE key content
	Key *string `json:"key,omitempty"`

	// Title Title or name for the KISE key
	Title *string `json:"title,omitempty"`

	// UpdatedAt Timestamp when the KISE key was last updated
	UpdatedAt *time.Time `json:"updated_at,omitempty"`

	// User The user this KISE key belongs to
	User *struct {
		// CreatedAt Timestamp when the user was created
		CreatedAt *time.Time `json:"created_at,omitempty"`

		// Email Email address of the user
		Email *string `json:"email,omitempty"`

		// Name Full name of the user
		Name *string `json:"name,omitempty"`

		// UpdatedAt Timestamp when the user was last updated
		UpdatedAt *time.Time `json:"updated_at,omitempty"`

		// Uuid Unique identifier for the user
		Uuid *string `json:"uuid,omitempty"`
	} `json:"user,omitempty"`

	// Uuid Unique identifier for the KISE key
	Uuid *string `json:"uuid,omitempty"`

	// Workspace The workspace this KISE key belongs to
	Workspace *string `json:"workspace,omitempty"`
}

// SuspendUserJSONBody defines parameters for SuspendUser.
type SuspendUserJSONBody struct {
	// CreatedAt Timestamp when the user was created
	CreatedAt *time.Time `json:"created_at,omitempty"`

	// Email Email address of the user
	Email *string `json:"email,omitempty"`

	// Name Full name of the user
	Name *string `json:"name,omitempty"`

	// UpdatedAt Timestamp when the user was last updated
	UpdatedAt *time.Time `json:"updated_at,omitempty"`

	// Uuid Unique identifier for the user
	Uuid *string `json:"uuid,omitempty"`
}

// GetOpenIdTokenJSONBody defines parameters for GetOpenIdToken.
type GetOpenIdTokenJSONBody struct {
	// ClientId OAuth 2.0 client identifier
	ClientId *string `json:"client_id,omitempty"`

	// ClientSecret OAuth 2.0 client secret
	ClientSecret *string `json:"client_secret,omitempty"`

	// Code Authorization code for authorization_code grant type
	Code *string `json:"code,omitempty"`

	// GrantType OAuth 2.0 grant type
	GrantType *string `json:"grant_type,omitempty"`

	// Password Password for password grant type
	Password *string `json:"password,omitempty"`

	// RedirectUri Redirect URI for authorization_code grant type
	RedirectUri *string `json:"redirect_uri,omitempty"`

	// RefreshToken Refresh token for refresh_token grant type
	RefreshToken *string `json:"refresh_token,omitempty"`

	// Scope OAuth 2.0 scope
	Scope *string `json:"scope,omitempty"`

	// Username Username for password grant type
	Username *string `json:"username,omitempty"`
}

// AcceptInvitationJSONRequestBody defines body for AcceptInvitation for application/json ContentType.
type AcceptInvitationJSONRequestBody AcceptInvitationJSONBody

// CreateAuthTokenWithCredJSONRequestBody defines body for CreateAuthTokenWithCred for application/json ContentType.
type CreateAuthTokenWithCredJSONRequestBody CreateAuthTokenWithCredJSONBody

// CreateAuthTokenWithChallengeJSONRequestBody defines body for CreateAuthTokenWithChallenge for application/json ContentType.
type CreateAuthTokenWithChallengeJSONRequestBody CreateAuthTokenWithChallengeJSONBody

// GetThirdPartyAccessTokenJSONRequestBody defines body for GetThirdPartyAccessToken for application/json ContentType.
type GetThirdPartyAccessTokenJSONRequestBody GetThirdPartyAccessTokenJSONBody

// ChangePasswordJSONRequestBody defines body for ChangePassword for application/json ContentType.
type ChangePasswordJSONRequestBody ChangePasswordJSONBody

// ResetPasswordJSONRequestBody defines body for ResetPassword for application/json ContentType.
type ResetPasswordJSONRequestBody ResetPasswordJSONBody

// BulkCanUserJSONRequestBody defines body for BulkCanUser for application/json ContentType.
type BulkCanUserJSONRequestBody = BulkCanUserJSONBody

// EnableUserOtpJSONRequestBody defines body for EnableUserOtp for application/json ContentType.
type EnableUserOtpJSONRequestBody EnableUserOtpJSONBody

// CreateUserPublicKeyJSONRequestBody defines body for CreateUserPublicKey for application/json ContentType.
type CreateUserPublicKeyJSONRequestBody CreateUserPublicKeyJSONBody

// CreateUserTokenJSONRequestBody defines body for CreateUserToken for application/json ContentType.
type CreateUserTokenJSONRequestBody CreateUserTokenJSONBody

// CreateBackupKeyJSONRequestBody defines body for CreateBackupKey for application/json ContentType.
type CreateBackupKeyJSONRequestBody CreateBackupKeyJSONBody

// CreateGroupJSONRequestBody defines body for CreateGroup for application/json ContentType.
type CreateGroupJSONRequestBody CreateGroupJSONBody

// UpdateGroupJSONRequestBody defines body for UpdateGroup for application/json ContentType.
type UpdateGroupJSONRequestBody UpdateGroupJSONBody

// BulkAddServiceUsersToGroupJSONRequestBody defines body for BulkAddServiceUsersToGroup for application/json ContentType.
type BulkAddServiceUsersToGroupJSONRequestBody BulkAddServiceUsersToGroupJSONBody

// BulkAddUsersToGroupJSONRequestBody defines body for BulkAddUsersToGroup for application/json ContentType.
type BulkAddUsersToGroupJSONRequestBody BulkAddUsersToGroupJSONBody

// AddServiceUserToGroupJSONRequestBody defines body for AddServiceUserToGroup for application/json ContentType.
type AddServiceUserToGroupJSONRequestBody AddServiceUserToGroupJSONBody

// AddUserToGroupJSONRequestBody defines body for AddUserToGroup for application/json ContentType.
type AddUserToGroupJSONRequestBody AddUserToGroupJSONBody

// InviteUsersToWorkspaceJSONRequestBody defines body for InviteUsersToWorkspace for application/json ContentType.
type InviteUsersToWorkspaceJSONRequestBody InviteUsersToWorkspaceJSONBody

// BulkAddRulesToRoleJSONRequestBody defines body for BulkAddRulesToRole for application/json ContentType.
type BulkAddRulesToRoleJSONRequestBody BulkAddRulesToRoleJSONBody

// BulkAddServiceUsersToRoleJSONRequestBody defines body for BulkAddServiceUsersToRole for application/json ContentType.
type BulkAddServiceUsersToRoleJSONRequestBody BulkAddServiceUsersToRoleJSONBody

// BulkAddUsersToRoleJSONRequestBody defines body for BulkAddUsersToRole for application/json ContentType.
type BulkAddUsersToRoleJSONRequestBody BulkAddUsersToRoleJSONBody

// AddRuleToRoleJSONRequestBody defines body for AddRuleToRole for application/json ContentType.
type AddRuleToRoleJSONRequestBody AddRuleToRoleJSONBody

// AssignRoleToServiceUserJSONRequestBody defines body for AssignRoleToServiceUser for application/json ContentType.
type AssignRoleToServiceUserJSONRequestBody AssignRoleToServiceUserJSONBody

// AssignRoleToUserJSONRequestBody defines body for AssignRoleToUser for application/json ContentType.
type AssignRoleToUserJSONRequestBody AssignRoleToUserJSONBody

// CreateRuleJSONRequestBody defines body for CreateRule for application/json ContentType.
type CreateRuleJSONRequestBody CreateRuleJSONBody

// UpdateRuleJSONRequestBody defines body for UpdateRule for application/json ContentType.
type UpdateRuleJSONRequestBody UpdateRuleJSONBody

// CreateServiceUserJSONRequestBody defines body for CreateServiceUser for application/json ContentType.
type CreateServiceUserJSONRequestBody CreateServiceUserJSONBody

// UpdateServiceUserJSONRequestBody defines body for UpdateServiceUser for application/json ContentType.
type UpdateServiceUserJSONRequestBody UpdateServiceUserJSONBody

// CreateServiceUserKiseKeyJSONRequestBody defines body for CreateServiceUserKiseKey for application/json ContentType.
type CreateServiceUserKiseKeyJSONRequestBody CreateServiceUserKiseKeyJSONBody

// CreateServiceUserPublicKeyJSONRequestBody defines body for CreateServiceUserPublicKey for application/json ContentType.
type CreateServiceUserPublicKeyJSONRequestBody CreateServiceUserPublicKeyJSONBody

// CreateServiceUserTokenJSONRequestBody defines body for CreateServiceUserToken for application/json ContentType.
type CreateServiceUserTokenJSONRequestBody CreateServiceUserTokenJSONBody

// BulkRefreshThirdPartyTokensJSONRequestBody defines body for BulkRefreshThirdPartyTokens for application/json ContentType.
type BulkRefreshThirdPartyTokensJSONRequestBody BulkRefreshThirdPartyTokensJSONBody

// AllowUserJSONRequestBody defines body for AllowUser for application/json ContentType.
type AllowUserJSONRequestBody AllowUserJSONBody

// CreateUserKiseKeyJSONRequestBody defines body for CreateUserKiseKey for application/json ContentType.
type CreateUserKiseKeyJSONRequestBody CreateUserKiseKeyJSONBody

// SuspendUserJSONRequestBody defines body for SuspendUser for application/json ContentType.
type SuspendUserJSONRequestBody SuspendUserJSONBody

// GetOpenIdTokenJSONRequestBody defines body for GetOpenIdToken for application/json ContentType.
type GetOpenIdTokenJSONRequestBody GetOpenIdTokenJSONBody
