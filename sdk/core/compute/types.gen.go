// Package compute provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package compute

const (
	Bearer_TokenScopes = "Bearer_Token.Scopes"
)

// Defines values for PostComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsJSONBodyApiVersion.
const (
	PostComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsJSONBodyApiVersionComputev2 PostComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsJSONBodyApiVersion = "compute/v2"
)

// Defines values for PostComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsJSONBodyKind.
const (
	PostComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsJSONBodyKindExternalIP PostComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsJSONBodyKind = "ExternalIP"
)

// Defines values for PutComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsResourceIdJSONBodyApiVersion.
const (
	PutComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsResourceIdJSONBodyApiVersionComputev2 PutComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsResourceIdJSONBodyApiVersion = "compute/v2"
)

// Defines values for PutComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsResourceIdJSONBodyKind.
const (
	PutComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsResourceIdJSONBodyKindExternalIP PutComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsResourceIdJSONBodyKind = "ExternalIP"
)

// Defines values for PostComputeV2Thr1WorkspacesWorkspaceUUIDInstancesJSONBodyApiVersion.
const (
	PostComputeV2Thr1WorkspacesWorkspaceUUIDInstancesJSONBodyApiVersionComputev2 PostComputeV2Thr1WorkspacesWorkspaceUUIDInstancesJSONBodyApiVersion = "compute/v2"
)

// Defines values for PostComputeV2Thr1WorkspacesWorkspaceUUIDInstancesJSONBodyKind.
const (
	PostComputeV2Thr1WorkspacesWorkspaceUUIDInstancesJSONBodyKindInstance PostComputeV2Thr1WorkspacesWorkspaceUUIDInstancesJSONBodyKind = "Instance"
)

// Defines values for PutComputeV2Thr1WorkspacesWorkspaceUUIDInstancesResourceIdJSONBodyApiVersion.
const (
	PutComputeV2Thr1WorkspacesWorkspaceUUIDInstancesResourceIdJSONBodyApiVersionComputev2 PutComputeV2Thr1WorkspacesWorkspaceUUIDInstancesResourceIdJSONBodyApiVersion = "compute/v2"
)

// Defines values for PutComputeV2Thr1WorkspacesWorkspaceUUIDInstancesResourceIdJSONBodyKind.
const (
	PutComputeV2Thr1WorkspacesWorkspaceUUIDInstancesResourceIdJSONBodyKindInstance PutComputeV2Thr1WorkspacesWorkspaceUUIDInstancesResourceIdJSONBodyKind = "Instance"
)

// Defines values for PostComputeV2Thr1WorkspacesWorkspaceUUIDLinksJSONBodyApiVersion.
const (
	PostComputeV2Thr1WorkspacesWorkspaceUUIDLinksJSONBodyApiVersionComputev2 PostComputeV2Thr1WorkspacesWorkspaceUUIDLinksJSONBodyApiVersion = "compute/v2"
)

// Defines values for PostComputeV2Thr1WorkspacesWorkspaceUUIDLinksJSONBodyKind.
const (
	PostComputeV2Thr1WorkspacesWorkspaceUUIDLinksJSONBodyKindLink PostComputeV2Thr1WorkspacesWorkspaceUUIDLinksJSONBodyKind = "Link"
)

// Defines values for PutComputeV2Thr1WorkspacesWorkspaceUUIDLinksResourceIdJSONBodyApiVersion.
const (
	PutComputeV2Thr1WorkspacesWorkspaceUUIDLinksResourceIdJSONBodyApiVersionComputev2 PutComputeV2Thr1WorkspacesWorkspaceUUIDLinksResourceIdJSONBodyApiVersion = "compute/v2"
)

// Defines values for PutComputeV2Thr1WorkspacesWorkspaceUUIDLinksResourceIdJSONBodyKind.
const (
	PutComputeV2Thr1WorkspacesWorkspaceUUIDLinksResourceIdJSONBodyKindLink PutComputeV2Thr1WorkspacesWorkspaceUUIDLinksResourceIdJSONBodyKind = "Link"
)

// PostComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsJSONBody defines parameters for PostComputeV2Thr1WorkspacesWorkspaceUUIDExternalIps.
type PostComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsJSONBody struct {
	// ApiVersion Version identifier of the API schema
	ApiVersion *PostComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsJSONBodyApiVersion `json:"apiVersion,omitempty"`

	// Kind The string value 'ExternalIP' that identifies the schema
	Kind *PostComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsJSONBodyKind `json:"kind,omitempty"`

	// Metadata Standard resource metadata fields
	Metadata *struct {
		// Annotations Annotations are key-value pairs storing additional metadata about resources
		Annotations *map[string]string `json:"annotations,omitempty"`

		// CreationTimestamp Timestamp when the resource was initially created
		CreationTimestamp interface{} `json:"creationTimestamp,omitempty"`

		// DeletionTimestamp Timestamp when the resource was marked for deletion - resource will be removed after this time
		DeletionTimestamp interface{} `json:"deletionTimestamp,omitempty"`

		// Labels Labels are key-value pairs attached to resources for organization and categorization
		Labels *map[string]string `json:"labels,omitempty"`

		// Name User-provided name that uniquely identifies the resource within its workspace and type
		Name *string `json:"name,omitempty"`

		// OwnerReferences References to other resources that own or manage the resource
		OwnerReferences *[]struct {
			ApiVersion         *string `json:"apiVersion,omitempty"`
			BlockOwnerDeletion *bool   `json:"blockOwnerDeletion,omitempty"`
			Controller         *bool   `json:"controller,omitempty"`
			Kind               *string `json:"kind,omitempty"`
			Name               *string `json:"name,omitempty"`
			Uid                *string `json:"uid,omitempty"`
		} `json:"ownerReferences,omitempty"`

		// ResourceVersion An opaque value representing the internal version of this object that can be used for optimistic concurrency and change detection
		ResourceVersion *string `json:"resourceVersion,omitempty"`

		// Uid System-generated unique identifier for the resource
		Uid *string `json:"uid,omitempty"`

		// Workspace Unique identifier of the workspace where the resource belongs
		Workspace *string `json:"workspace,omitempty"`
	} `json:"metadata,omitempty"`

	// Spec Desired configuration and characteristics for the external ip
	Spec *struct {
		// BoundTo Specifies the target object that will receive traffic directed to this external IP.
		BoundTo *struct {
			ApiVersion      *string `json:"apiVersion,omitempty"`
			FieldPath       *string `json:"fieldPath,omitempty"`
			Kind            *string `json:"kind,omitempty"`
			Name            *string `json:"name,omitempty"`
			Namespace       *string `json:"namespace,omitempty"`
			ResourceVersion *string `json:"resourceVersion,omitempty"`
			Uid             *string `json:"uid,omitempty"`
		} `json:"boundTo,omitempty"`

		// Ip The allocated external IPv4 address.
		Ip       *string `json:"ip,omitempty"`
		PoolName *string `json:"poolName,omitempty"`

		// Reserved When set to true, prevents the external IP from being garbage collected even if the target object is removed.
		Reserved *bool `json:"reserved,omitempty"`
	} `json:"spec,omitempty"`

	// Status Current observed state and conditions of the external ip
	Status *struct {
		// Gateway The IPv4 gateway address used for routing outgoing traffic from this external IP.
		Gateway *string `json:"gateway,omitempty"`

		// Operational Indicates whether the bound target is running and able to receive traffic.
		Operational *bool `json:"operational,omitempty"`

		// Ready Indicates whether the external IP is fully configured and ready to use.
		Ready *bool `json:"ready,omitempty"`
	} `json:"status,omitempty"`
}

// PostComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsJSONBodyApiVersion defines parameters for PostComputeV2Thr1WorkspacesWorkspaceUUIDExternalIps.
type PostComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsJSONBodyApiVersion string

// PostComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsJSONBodyKind defines parameters for PostComputeV2Thr1WorkspacesWorkspaceUUIDExternalIps.
type PostComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsJSONBodyKind string

// PutComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsResourceIdJSONBody defines parameters for PutComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsResourceId.
type PutComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsResourceIdJSONBody struct {
	// ApiVersion Version identifier of the API schema
	ApiVersion *PutComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsResourceIdJSONBodyApiVersion `json:"apiVersion,omitempty"`

	// Kind The string value 'ExternalIP' that identifies the schema
	Kind *PutComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsResourceIdJSONBodyKind `json:"kind,omitempty"`

	// Metadata Standard resource metadata fields
	Metadata *struct {
		// Annotations Annotations are key-value pairs storing additional metadata about resources
		Annotations *map[string]string `json:"annotations,omitempty"`

		// CreationTimestamp Timestamp when the resource was initially created
		CreationTimestamp interface{} `json:"creationTimestamp,omitempty"`

		// DeletionTimestamp Timestamp when the resource was marked for deletion - resource will be removed after this time
		DeletionTimestamp interface{} `json:"deletionTimestamp,omitempty"`

		// Labels Labels are key-value pairs attached to resources for organization and categorization
		Labels *map[string]string `json:"labels,omitempty"`

		// Name User-provided name that uniquely identifies the resource within its workspace and type
		Name *string `json:"name,omitempty"`

		// OwnerReferences References to other resources that own or manage the resource
		OwnerReferences *[]struct {
			ApiVersion         *string `json:"apiVersion,omitempty"`
			BlockOwnerDeletion *bool   `json:"blockOwnerDeletion,omitempty"`
			Controller         *bool   `json:"controller,omitempty"`
			Kind               *string `json:"kind,omitempty"`
			Name               *string `json:"name,omitempty"`
			Uid                *string `json:"uid,omitempty"`
		} `json:"ownerReferences,omitempty"`

		// ResourceVersion An opaque value representing the internal version of this object that can be used for optimistic concurrency and change detection
		ResourceVersion *string `json:"resourceVersion,omitempty"`

		// Uid System-generated unique identifier for the resource
		Uid *string `json:"uid,omitempty"`

		// Workspace Unique identifier of the workspace where the resource belongs
		Workspace *string `json:"workspace,omitempty"`
	} `json:"metadata,omitempty"`

	// Spec Desired configuration and characteristics for the external ip
	Spec *struct {
		// BoundTo Specifies the target object that will receive traffic directed to this external IP.
		BoundTo *struct {
			ApiVersion      *string `json:"apiVersion,omitempty"`
			FieldPath       *string `json:"fieldPath,omitempty"`
			Kind            *string `json:"kind,omitempty"`
			Name            *string `json:"name,omitempty"`
			Namespace       *string `json:"namespace,omitempty"`
			ResourceVersion *string `json:"resourceVersion,omitempty"`
			Uid             *string `json:"uid,omitempty"`
		} `json:"boundTo,omitempty"`

		// Ip The allocated external IPv4 address.
		Ip       *string `json:"ip,omitempty"`
		PoolName *string `json:"poolName,omitempty"`

		// Reserved When set to true, prevents the external IP from being garbage collected even if the target object is removed.
		Reserved *bool `json:"reserved,omitempty"`
	} `json:"spec,omitempty"`

	// Status Current observed state and conditions of the external ip
	Status *struct {
		// Gateway The IPv4 gateway address used for routing outgoing traffic from this external IP.
		Gateway *string `json:"gateway,omitempty"`

		// Operational Indicates whether the bound target is running and able to receive traffic.
		Operational *bool `json:"operational,omitempty"`

		// Ready Indicates whether the external IP is fully configured and ready to use.
		Ready *bool `json:"ready,omitempty"`
	} `json:"status,omitempty"`
}

// PutComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsResourceIdJSONBodyApiVersion defines parameters for PutComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsResourceId.
type PutComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsResourceIdJSONBodyApiVersion string

// PutComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsResourceIdJSONBodyKind defines parameters for PutComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsResourceId.
type PutComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsResourceIdJSONBodyKind string

// PostComputeV2Thr1WorkspacesWorkspaceUUIDInstancesJSONBody defines parameters for PostComputeV2Thr1WorkspacesWorkspaceUUIDInstances.
type PostComputeV2Thr1WorkspacesWorkspaceUUIDInstancesJSONBody struct {
	// ApiVersion Version identifier of the API schema
	ApiVersion *PostComputeV2Thr1WorkspacesWorkspaceUUIDInstancesJSONBodyApiVersion `json:"apiVersion,omitempty"`

	// Kind The string value 'Instance' that identifies the schema
	Kind *PostComputeV2Thr1WorkspacesWorkspaceUUIDInstancesJSONBodyKind `json:"kind,omitempty"`

	// Metadata Standard resource metadata fields
	Metadata *struct {
		// Annotations Annotations are key-value pairs storing additional metadata about resources
		Annotations *map[string]string `json:"annotations,omitempty"`

		// CreationTimestamp Timestamp when the resource was initially created
		CreationTimestamp interface{} `json:"creationTimestamp,omitempty"`

		// DeletionTimestamp Timestamp when the resource was marked for deletion - resource will be removed after this time
		DeletionTimestamp interface{} `json:"deletionTimestamp,omitempty"`

		// Labels Labels are key-value pairs attached to resources for organization and categorization
		Labels *map[string]string `json:"labels,omitempty"`

		// Name User-provided name that uniquely identifies the resource within its workspace and type
		Name *string `json:"name,omitempty"`

		// OwnerReferences References to other resources that own or manage the resource
		OwnerReferences *struct {
			ApiVersion         *string `json:"apiVersion,omitempty"`
			BlockOwnerDeletion *bool   `json:"blockOwnerDeletion,omitempty"`
			Controller         *bool   `json:"controller,omitempty"`
			Kind               *string `json:"kind,omitempty"`
			Name               *string `json:"name,omitempty"`
			Uid                *string `json:"uid,omitempty"`
		} `json:"ownerReferences,omitempty"`

		// ResourceVersion An opaque value representing the internal version of this object that can be used for optimistic concurrency and change detection
		ResourceVersion *string `json:"resourceVersion,omitempty"`

		// Uid System-generated unique identifier for the resource
		Uid *string `json:"uid,omitempty"`

		// Workspace Unique identifier of the workspace where the resource belongs
		Workspace *string `json:"workspace,omitempty"`
	} `json:"metadata,omitempty"`

	// Spec Desired configuration and characteristics for the instance
	Spec *struct {
		// IamEnabled When enabled, SSH access to this instance will be authenticated through Sotoon IAM.
		IamEnabled *bool `json:"iamEnabled,omitempty"`

		// ImageSource Specifies the base operating system image used to boot the instance. Must specify either an image or customImage, but not both.
		ImageSource *struct {
			// CustomImage Name of the custom image to boot the instance from. Must be a valid custom image name. Cannot be modified after instance creation. Cannot be used together with image.
			CustomImage *string `json:"customImage,omitempty"`

			// Image Name of the base operating system image to boot the instance from. Must be a valid image name. Cannot be modified after instance creation. Cannot be used together with customImage.
			Image *string `json:"image,omitempty"`
		} `json:"imageSource,omitempty"`

		// InitialUser Defines the initial OS login credentials. If specified, both username and password must be provided.
		InitialUser *struct {
			// Password Password configuration for the user account, specified either through a secret or file source
			Password *struct {
				// FromSecret Reference to a secret containing the password value. The secret must exist in the same namespace as the instance.
				FromSecret *struct {
					// Key Key within the secret containing the desired value. If not specified, defaults to the instance name
					Key *string `json:"key,omitempty"`

					// Name Name of the secret in the instance's namespace. If not specified, defaults to <Instance.Name>-login. Must be 1-220 characters long and contain only lowercase alphanumeric characters, - and .
					Name *string `json:"name,omitempty"`

					// Optional When true, the referenced secret and key are optional and will be filled automatically. When false or unset, they must exist
					Optional *bool `json:"optional,omitempty"`
				} `json:"fromSecret,omitempty"`
			} `json:"password,omitempty"`

			// SshAuthorizedKeys List of SSH public keys to authorize for this user account
			SshAuthorizedKeys *[]string `json:"sshAuthorizedKeys,omitempty"`

			// Username Operating system username for the initial user account. Must follow Linux username requirements.
			Username *string `json:"username,omitempty"`
		} `json:"initialUser,omitempty"`

		// Interfaces List of network interfaces to attach to the instance. Each interface defines network connectivity.
		Interfaces *struct {
			// Link Name of the Link resource that defines the network this interface connects to
			Link *string `json:"link,omitempty"`

			// Name Unique identifier for this network interface within the instance
			Name *string `json:"name,omitempty"`
		} `json:"interfaces,omitempty"`

		// OsVolume Defines the storage volume containing the operating system. Must specify either persistentVolumeClaim or localDisk (localDisk settings are ignored).
		OsVolume *struct {
			// LocalDisk Specification for a local disk volume to create and attach to the instance. Cannot be used together with persistentVolumeClaim.
			LocalDisk *struct {
				// Name Name of the local disk. This field is automatically populated based on the instance type configuration and should not be set by users.
				Name *string `json:"name,omitempty"`

				// Size Size of the local disk in bytes. This field is automatically populated based on the instance type configuration and should not be set by users.
				Size *string `json:"size,omitempty"`
			} `json:"localDisk,omitempty"`

			// PersistentVolumeClaim Reference to a PersistentVolumeClaim to use as a volume source. Cannot be used together with localDisk.
			PersistentVolumeClaim *struct {
				ClaimName *string `json:"claimName,omitempty"`
				ReadOnly  *bool   `json:"readOnly,omitempty"`
			} `json:"persistentVolumeClaim,omitempty"`
		} `json:"osVolume,omitempty"`

		// PlacementGroupRef Reference to a placement group that influences instance scheduling for anti-affinity.
		PlacementGroupRef *struct {
			Name *string `json:"name,omitempty"`
		} `json:"placementGroupRef,omitempty"`

		// PoweredOn Controls the power state of the instance. True means the instance is powered on, false means powered off.
		PoweredOn *bool `json:"poweredOn,omitempty"`

		// RestartedAt Timestamp indicating when the instance is scheduled to restart. Empty indicates no scheduled restart.
		RestartedAt interface{} `json:"restartedAt,omitempty"`

		// Type Specifies the instance type that determines CPU, memory and other resource allocations. Must match an existing Instance Type name. Can be modified to resize the instance.
		Type *string `json:"type,omitempty"`

		// UserData Cloud-init configuration data provided in base64 encoded format. Used to customize instance on first boot.
		UserData *string `json:"userData,omitempty"`

		// Volumes List of additional storage volumes to attach to the instance. Each volume must specify either persistentVolumeClaim or localDisk (localDisk settings are ignored).
		Volumes *struct {
			// LocalDisk Specification for a local disk volume to create and attach to the instance. Cannot be used together with persistentVolumeClaim.
			LocalDisk *struct {
				// Name Name of the local disk. This field is automatically populated based on the instance type configuration and should not be set by users.
				Name *string `json:"name,omitempty"`

				// Size Size of the local disk in bytes. This field is automatically populated based on the instance type configuration and should not be set by users.
				Size *string `json:"size,omitempty"`
			} `json:"localDisk,omitempty"`

			// PersistentVolumeClaim Reference to a PersistentVolumeClaim to use as a volume source. Cannot be used together with localDisk.
			PersistentVolumeClaim *struct {
				ClaimName *string `json:"claimName,omitempty"`
				ReadOnly  *bool   `json:"readOnly,omitempty"`
			} `json:"persistentVolumeClaim,omitempty"`
		} `json:"volumes,omitempty"`
	} `json:"spec,omitempty"`

	// Status Current observed state and conditions of the instance
	Status *struct {
		// AttachedVolumes Contains details about all storage volumes currently attached to this instance
		AttachedVolumes *struct {
			// Size Storage capacity of the attached volume in bytes
			Size *string `json:"Size,omitempty"`

			// Name Name of the attached volume, corresponding to the PersistentVolume name for persistent volumes or the local disk name for local disks
			Name *string `json:"name,omitempty"`

			// VolumeID Unique identifier of the volume resource, used for mapping volumes to block devices
			VolumeID *string `json:"volumeID,omitempty"`

			// VolumeType Type of the attached volume - either 'persistentvolume' or 'localdisk'
			VolumeType *string `json:"volumeType,omitempty"`
		} `json:"attachedVolumes,omitempty"`

		// Conditions List of conditions representing the current state of various instance subsystems
		Conditions *struct {
			LastProbeTime      interface{} `json:"lastProbeTime,omitempty"`
			LastTransitionTime interface{} `json:"lastTransitionTime,omitempty"`
			Message            *string     `json:"message,omitempty"`
			Reason             *string     `json:"reason,omitempty"`
			Status             *string     `json:"status,omitempty"`
			Type               *string     `json:"type,omitempty"`
		} `json:"conditions,omitempty"`

		// Ready Indicates whether the instance is fully configured and operational
		Ready *bool `json:"ready,omitempty"`

		// Resizing Indicates whether the instance is currently being resized to a different instance type
		Resizing *bool `json:"resizing,omitempty"`

		// RestartRequired Indicates whether the instance requires a restart to apply pending changes
		RestartRequired *bool `json:"restartRequired,omitempty"`

		// Restarting Indicates whether the instance is currently in the process of restarting
		Restarting *bool `json:"restarting,omitempty"`

		// Running Indicates whether the instance's operating system is currently running
		Running *bool `json:"running,omitempty"`

		// RuntimeConfiguration Contains the current runtime configuration settings for the instance, including CPU, memory and other resources
		RuntimeConfiguration *struct {
			// Cpu Number of CPU cores
			Cpu *string `json:"cpu,omitempty"`

			// Memory Memory size
			Memory *string `json:"memory,omitempty"`
		} `json:"runtimeConfiguration,omitempty"`

		// Type The current instance type that defines the cpu, memory and storage capacity
		Type *string `json:"type,omitempty"`
	} `json:"status,omitempty"`
}

// PostComputeV2Thr1WorkspacesWorkspaceUUIDInstancesJSONBodyApiVersion defines parameters for PostComputeV2Thr1WorkspacesWorkspaceUUIDInstances.
type PostComputeV2Thr1WorkspacesWorkspaceUUIDInstancesJSONBodyApiVersion string

// PostComputeV2Thr1WorkspacesWorkspaceUUIDInstancesJSONBodyKind defines parameters for PostComputeV2Thr1WorkspacesWorkspaceUUIDInstances.
type PostComputeV2Thr1WorkspacesWorkspaceUUIDInstancesJSONBodyKind string

// PutComputeV2Thr1WorkspacesWorkspaceUUIDInstancesResourceIdJSONBody defines parameters for PutComputeV2Thr1WorkspacesWorkspaceUUIDInstancesResourceId.
type PutComputeV2Thr1WorkspacesWorkspaceUUIDInstancesResourceIdJSONBody struct {
	// ApiVersion Version identifier of the API schema
	ApiVersion *PutComputeV2Thr1WorkspacesWorkspaceUUIDInstancesResourceIdJSONBodyApiVersion `json:"apiVersion,omitempty"`

	// Kind The string value 'Instance' that identifies the schema
	Kind *PutComputeV2Thr1WorkspacesWorkspaceUUIDInstancesResourceIdJSONBodyKind `json:"kind,omitempty"`

	// Metadata Standard resource metadata fields
	Metadata *struct {
		// Annotations Annotations are key-value pairs storing additional metadata about resources
		Annotations *map[string]string `json:"annotations,omitempty"`

		// CreationTimestamp Timestamp when the resource was initially created
		CreationTimestamp interface{} `json:"creationTimestamp,omitempty"`

		// DeletionTimestamp Timestamp when the resource was marked for deletion - resource will be removed after this time
		DeletionTimestamp interface{} `json:"deletionTimestamp,omitempty"`

		// Labels Labels are key-value pairs attached to resources for organization and categorization
		Labels *map[string]string `json:"labels,omitempty"`

		// Name User-provided name that uniquely identifies the resource within its workspace and type
		Name *string `json:"name,omitempty"`

		// OwnerReferences References to other resources that own or manage the resource
		OwnerReferences *struct {
			ApiVersion         *string `json:"apiVersion,omitempty"`
			BlockOwnerDeletion *bool   `json:"blockOwnerDeletion,omitempty"`
			Controller         *bool   `json:"controller,omitempty"`
			Kind               *string `json:"kind,omitempty"`
			Name               *string `json:"name,omitempty"`
			Uid                *string `json:"uid,omitempty"`
		} `json:"ownerReferences,omitempty"`

		// ResourceVersion An opaque value representing the internal version of this object that can be used for optimistic concurrency and change detection
		ResourceVersion *string `json:"resourceVersion,omitempty"`

		// Uid System-generated unique identifier for the resource
		Uid *string `json:"uid,omitempty"`

		// Workspace Unique identifier of the workspace where the resource belongs
		Workspace *string `json:"workspace,omitempty"`
	} `json:"metadata,omitempty"`

	// Spec Desired configuration and characteristics for the instance
	Spec *struct {
		// IamEnabled When enabled, SSH access to this instance will be authenticated through Sotoon IAM.
		IamEnabled *bool `json:"iamEnabled,omitempty"`

		// ImageSource Specifies the base operating system image used to boot the instance. Must specify either an image or customImage, but not both.
		ImageSource *struct {
			// CustomImage Name of the custom image to boot the instance from. Must be a valid custom image name. Cannot be modified after instance creation. Cannot be used together with image.
			CustomImage *string `json:"customImage,omitempty"`

			// Image Name of the base operating system image to boot the instance from. Must be a valid image name. Cannot be modified after instance creation. Cannot be used together with customImage.
			Image *string `json:"image,omitempty"`
		} `json:"imageSource,omitempty"`

		// InitialUser Defines the initial OS login credentials. If specified, both username and password must be provided.
		InitialUser *struct {
			// Password Password configuration for the user account, specified either through a secret or file source
			Password *struct {
				// FromSecret Reference to a secret containing the password value. The secret must exist in the same namespace as the instance.
				FromSecret *struct {
					// Key Key within the secret containing the desired value. If not specified, defaults to the instance name
					Key *string `json:"key,omitempty"`

					// Name Name of the secret in the instance's namespace. If not specified, defaults to <Instance.Name>-login. Must be 1-220 characters long and contain only lowercase alphanumeric characters, - and .
					Name *string `json:"name,omitempty"`

					// Optional When true, the referenced secret and key are optional and will be filled automatically. When false or unset, they must exist
					Optional *bool `json:"optional,omitempty"`
				} `json:"fromSecret,omitempty"`
			} `json:"password,omitempty"`

			// SshAuthorizedKeys List of SSH public keys to authorize for this user account
			SshAuthorizedKeys *[]string `json:"sshAuthorizedKeys,omitempty"`

			// Username Operating system username for the initial user account. Must follow Linux username requirements.
			Username *string `json:"username,omitempty"`
		} `json:"initialUser,omitempty"`

		// Interfaces List of network interfaces to attach to the instance. Each interface defines network connectivity.
		Interfaces *struct {
			// Link Name of the Link resource that defines the network this interface connects to
			Link *string `json:"link,omitempty"`

			// Name Unique identifier for this network interface within the instance
			Name *string `json:"name,omitempty"`
		} `json:"interfaces,omitempty"`

		// OsVolume Defines the storage volume containing the operating system. Must specify either persistentVolumeClaim or localDisk (localDisk settings are ignored).
		OsVolume *struct {
			// LocalDisk Specification for a local disk volume to create and attach to the instance. Cannot be used together with persistentVolumeClaim.
			LocalDisk *struct {
				// Name Name of the local disk. This field is automatically populated based on the instance type configuration and should not be set by users.
				Name *string `json:"name,omitempty"`

				// Size Size of the local disk in bytes. This field is automatically populated based on the instance type configuration and should not be set by users.
				Size *string `json:"size,omitempty"`
			} `json:"localDisk,omitempty"`

			// PersistentVolumeClaim Reference to a PersistentVolumeClaim to use as a volume source. Cannot be used together with localDisk.
			PersistentVolumeClaim *struct {
				ClaimName *string `json:"claimName,omitempty"`
				ReadOnly  *bool   `json:"readOnly,omitempty"`
			} `json:"persistentVolumeClaim,omitempty"`
		} `json:"osVolume,omitempty"`

		// PlacementGroupRef Reference to a placement group that influences instance scheduling for anti-affinity.
		PlacementGroupRef *struct {
			Name *string `json:"name,omitempty"`
		} `json:"placementGroupRef,omitempty"`

		// PoweredOn Controls the power state of the instance. True means the instance is powered on, false means powered off.
		PoweredOn *bool `json:"poweredOn,omitempty"`

		// RestartedAt Timestamp indicating when the instance is scheduled to restart. Empty indicates no scheduled restart.
		RestartedAt interface{} `json:"restartedAt,omitempty"`

		// Type Specifies the instance type that determines CPU, memory and other resource allocations. Must match an existing Instance Type name. Can be modified to resize the instance.
		Type *string `json:"type,omitempty"`

		// UserData Cloud-init configuration data provided in base64 encoded format. Used to customize instance on first boot.
		UserData *string `json:"userData,omitempty"`

		// Volumes List of additional storage volumes to attach to the instance. Each volume must specify either persistentVolumeClaim or localDisk (localDisk settings are ignored).
		Volumes *struct {
			// LocalDisk Specification for a local disk volume to create and attach to the instance. Cannot be used together with persistentVolumeClaim.
			LocalDisk *struct {
				// Name Name of the local disk. This field is automatically populated based on the instance type configuration and should not be set by users.
				Name *string `json:"name,omitempty"`

				// Size Size of the local disk in bytes. This field is automatically populated based on the instance type configuration and should not be set by users.
				Size *string `json:"size,omitempty"`
			} `json:"localDisk,omitempty"`

			// PersistentVolumeClaim Reference to a PersistentVolumeClaim to use as a volume source. Cannot be used together with localDisk.
			PersistentVolumeClaim *struct {
				ClaimName *string `json:"claimName,omitempty"`
				ReadOnly  *bool   `json:"readOnly,omitempty"`
			} `json:"persistentVolumeClaim,omitempty"`
		} `json:"volumes,omitempty"`
	} `json:"spec,omitempty"`

	// Status Current observed state and conditions of the instance
	Status *struct {
		// AttachedVolumes Contains details about all storage volumes currently attached to this instance
		AttachedVolumes *struct {
			// Size Storage capacity of the attached volume in bytes
			Size *string `json:"Size,omitempty"`

			// Name Name of the attached volume, corresponding to the PersistentVolume name for persistent volumes or the local disk name for local disks
			Name *string `json:"name,omitempty"`

			// VolumeID Unique identifier of the volume resource, used for mapping volumes to block devices
			VolumeID *string `json:"volumeID,omitempty"`

			// VolumeType Type of the attached volume - either 'persistentvolume' or 'localdisk'
			VolumeType *string `json:"volumeType,omitempty"`
		} `json:"attachedVolumes,omitempty"`

		// Conditions List of conditions representing the current state of various instance subsystems
		Conditions *struct {
			LastProbeTime      interface{} `json:"lastProbeTime,omitempty"`
			LastTransitionTime interface{} `json:"lastTransitionTime,omitempty"`
			Message            *string     `json:"message,omitempty"`
			Reason             *string     `json:"reason,omitempty"`
			Status             *string     `json:"status,omitempty"`
			Type               *string     `json:"type,omitempty"`
		} `json:"conditions,omitempty"`

		// Ready Indicates whether the instance is fully configured and operational
		Ready *bool `json:"ready,omitempty"`

		// Resizing Indicates whether the instance is currently being resized to a different instance type
		Resizing *bool `json:"resizing,omitempty"`

		// RestartRequired Indicates whether the instance requires a restart to apply pending changes
		RestartRequired *bool `json:"restartRequired,omitempty"`

		// Restarting Indicates whether the instance is currently in the process of restarting
		Restarting *bool `json:"restarting,omitempty"`

		// Running Indicates whether the instance's operating system is currently running
		Running *bool `json:"running,omitempty"`

		// RuntimeConfiguration Contains the current runtime configuration settings for the instance, including CPU, memory and other resources
		RuntimeConfiguration *struct {
			// Cpu Number of CPU cores
			Cpu *string `json:"cpu,omitempty"`

			// Memory Memory size
			Memory *string `json:"memory,omitempty"`
		} `json:"runtimeConfiguration,omitempty"`

		// Type The current instance type that defines the cpu, memory and storage capacity
		Type *string `json:"type,omitempty"`
	} `json:"status,omitempty"`
}

// PutComputeV2Thr1WorkspacesWorkspaceUUIDInstancesResourceIdJSONBodyApiVersion defines parameters for PutComputeV2Thr1WorkspacesWorkspaceUUIDInstancesResourceId.
type PutComputeV2Thr1WorkspacesWorkspaceUUIDInstancesResourceIdJSONBodyApiVersion string

// PutComputeV2Thr1WorkspacesWorkspaceUUIDInstancesResourceIdJSONBodyKind defines parameters for PutComputeV2Thr1WorkspacesWorkspaceUUIDInstancesResourceId.
type PutComputeV2Thr1WorkspacesWorkspaceUUIDInstancesResourceIdJSONBodyKind string

// PostComputeV2Thr1WorkspacesWorkspaceUUIDLinksJSONBody defines parameters for PostComputeV2Thr1WorkspacesWorkspaceUUIDLinks.
type PostComputeV2Thr1WorkspacesWorkspaceUUIDLinksJSONBody struct {
	// ApiVersion Version identifier of the API schema
	ApiVersion *PostComputeV2Thr1WorkspacesWorkspaceUUIDLinksJSONBodyApiVersion `json:"apiVersion,omitempty"`

	// Kind The string value 'Link' that identifies the schema
	Kind *PostComputeV2Thr1WorkspacesWorkspaceUUIDLinksJSONBodyKind `json:"kind,omitempty"`

	// Metadata Standard resource metadata fields
	Metadata *struct {
		// Annotations Annotations are key-value pairs storing additional metadata about resources
		Annotations *map[string]string `json:"annotations,omitempty"`

		// CreationTimestamp Timestamp when the resource was initially created
		CreationTimestamp interface{} `json:"creationTimestamp,omitempty"`

		// DeletionTimestamp Timestamp when the resource was marked for deletion - resource will be removed after this time
		DeletionTimestamp interface{} `json:"deletionTimestamp,omitempty"`

		// Labels Labels are key-value pairs attached to resources for organization and categorization
		Labels *map[string]string `json:"labels,omitempty"`

		// Name User-provided name that uniquely identifies the resource within its workspace and type
		Name *string `json:"name,omitempty"`

		// OwnerReferences References to other resources that own or manage the resource
		OwnerReferences *[]struct {
			ApiVersion         *string `json:"apiVersion,omitempty"`
			BlockOwnerDeletion *bool   `json:"blockOwnerDeletion,omitempty"`
			Controller         *bool   `json:"controller,omitempty"`
			Kind               *string `json:"kind,omitempty"`
			Name               *string `json:"name,omitempty"`
			Uid                *string `json:"uid,omitempty"`
		} `json:"ownerReferences,omitempty"`

		// ResourceVersion An opaque value representing the internal version of this object that can be used for optimistic concurrency and change detection
		ResourceVersion *string `json:"resourceVersion,omitempty"`

		// Uid System-generated unique identifier for the resource
		Uid *string `json:"uid,omitempty"`

		// Workspace Unique identifier of the workspace where the resource belongs
		Workspace *string `json:"workspace,omitempty"`
	} `json:"metadata,omitempty"`

	// Spec Desired configuration and characteristics for the link
	Spec *struct {
		// BoundTo Reference to the instance that this link is connected to.
		BoundTo *struct {
			ApiVersion      *string `json:"apiVersion,omitempty"`
			FieldPath       *string `json:"fieldPath,omitempty"`
			Kind            *string `json:"kind,omitempty"`
			Name            *string `json:"name,omitempty"`
			Namespace       *string `json:"namespace,omitempty"`
			ResourceVersion *string `json:"resourceVersion,omitempty"`
			Uid             *string `json:"uid,omitempty"`
		} `json:"boundTo,omitempty"`

		// ExternalIPRef Reference to the external IP resource. If empty, this link does not have an external IP address.
		ExternalIPRef *struct {
			Name *string `json:"name,omitempty"`
		} `json:"externalIPRef,omitempty"`

		// ForwardableAddresses List of addresses that can forward traffic through this link.
		ForwardableAddresses *[]struct {
			// Cidr Specifies the IP range in CIDR notation that can be forwarded through this link
			Cidr *string `json:"cidr,omitempty"`

			// Mac The MAC address associated with this forwardable address. If not specified, the link's MAC address will be used.
			Mac *string `json:"mac,omitempty"`
		} `json:"forwardableAddresses,omitempty"`

		// Ip The IP address assigned to this link. If not specified, a unique IP address will be automatically allocated from the subnet CIDR.
		Ip *string `json:"ip,omitempty"`

		// SubnetName The name of the subnet where this link is placed.
		SubnetName *string `json:"subnetName,omitempty"`

		// VpcName Name of the VPC containing this link's subnet.
		VpcName *string `json:"vpcName,omitempty"`
	} `json:"spec,omitempty"`

	// Status Current observed state and conditions of the link
	Status *struct {
		// Configured Indicates if the link is properly configured.
		Configured *bool `json:"configured,omitempty"`

		// Created Indicates if the network device has been created.
		Created *bool `json:"created,omitempty"`

		// ExternalIP Details of the external IP associated with this link. This field will not be set if the link has no external IP.
		ExternalIP *struct {
			Gateway *string `json:"gateway,omitempty"`
			Ip      *string `json:"ip,omitempty"`
			Name    *string `json:"name,omitempty"`
		} `json:"externalIP,omitempty"`

		// GatewayIP Gateway IP address of the subnet.
		GatewayIP *string `json:"gatewayIP,omitempty"`

		// Mac MAC address assigned to this link.
		Mac *string `json:"mac,omitempty"`

		// Mtu Maximum Transmission Unit (MTU) configured on the network device.
		Mtu *int `json:"mtu,omitempty"`

		// Operational Indicates if the link is operational.
		Operational *bool `json:"operational,omitempty"`

		// Ready Indicates if the link is ready for use.
		Ready *bool `json:"ready,omitempty"`
	} `json:"status,omitempty"`
}

// PostComputeV2Thr1WorkspacesWorkspaceUUIDLinksJSONBodyApiVersion defines parameters for PostComputeV2Thr1WorkspacesWorkspaceUUIDLinks.
type PostComputeV2Thr1WorkspacesWorkspaceUUIDLinksJSONBodyApiVersion string

// PostComputeV2Thr1WorkspacesWorkspaceUUIDLinksJSONBodyKind defines parameters for PostComputeV2Thr1WorkspacesWorkspaceUUIDLinks.
type PostComputeV2Thr1WorkspacesWorkspaceUUIDLinksJSONBodyKind string

// PutComputeV2Thr1WorkspacesWorkspaceUUIDLinksResourceIdJSONBody defines parameters for PutComputeV2Thr1WorkspacesWorkspaceUUIDLinksResourceId.
type PutComputeV2Thr1WorkspacesWorkspaceUUIDLinksResourceIdJSONBody struct {
	// ApiVersion Version identifier of the API schema
	ApiVersion *PutComputeV2Thr1WorkspacesWorkspaceUUIDLinksResourceIdJSONBodyApiVersion `json:"apiVersion,omitempty"`

	// Kind The string value 'Link' that identifies the schema
	Kind *PutComputeV2Thr1WorkspacesWorkspaceUUIDLinksResourceIdJSONBodyKind `json:"kind,omitempty"`

	// Metadata Standard resource metadata fields
	Metadata *struct {
		// Annotations Annotations are key-value pairs storing additional metadata about resources
		Annotations *map[string]string `json:"annotations,omitempty"`

		// CreationTimestamp Timestamp when the resource was initially created
		CreationTimestamp interface{} `json:"creationTimestamp,omitempty"`

		// DeletionTimestamp Timestamp when the resource was marked for deletion - resource will be removed after this time
		DeletionTimestamp interface{} `json:"deletionTimestamp,omitempty"`

		// Labels Labels are key-value pairs attached to resources for organization and categorization
		Labels *map[string]string `json:"labels,omitempty"`

		// Name User-provided name that uniquely identifies the resource within its workspace and type
		Name *string `json:"name,omitempty"`

		// OwnerReferences References to other resources that own or manage the resource
		OwnerReferences *[]struct {
			ApiVersion         *string `json:"apiVersion,omitempty"`
			BlockOwnerDeletion *bool   `json:"blockOwnerDeletion,omitempty"`
			Controller         *bool   `json:"controller,omitempty"`
			Kind               *string `json:"kind,omitempty"`
			Name               *string `json:"name,omitempty"`
			Uid                *string `json:"uid,omitempty"`
		} `json:"ownerReferences,omitempty"`

		// ResourceVersion An opaque value representing the internal version of this object that can be used for optimistic concurrency and change detection
		ResourceVersion *string `json:"resourceVersion,omitempty"`

		// Uid System-generated unique identifier for the resource
		Uid *string `json:"uid,omitempty"`

		// Workspace Unique identifier of the workspace where the resource belongs
		Workspace *string `json:"workspace,omitempty"`
	} `json:"metadata,omitempty"`

	// Spec Desired configuration and characteristics for the link
	Spec *struct {
		// BoundTo Reference to the instance that this link is connected to.
		BoundTo *struct {
			ApiVersion      *string `json:"apiVersion,omitempty"`
			FieldPath       *string `json:"fieldPath,omitempty"`
			Kind            *string `json:"kind,omitempty"`
			Name            *string `json:"name,omitempty"`
			Namespace       *string `json:"namespace,omitempty"`
			ResourceVersion *string `json:"resourceVersion,omitempty"`
			Uid             *string `json:"uid,omitempty"`
		} `json:"boundTo,omitempty"`

		// ExternalIPRef Reference to the external IP resource. If empty, this link does not have an external IP address.
		ExternalIPRef *struct {
			Name *string `json:"name,omitempty"`
		} `json:"externalIPRef,omitempty"`

		// ForwardableAddresses List of addresses that can forward traffic through this link.
		ForwardableAddresses *[]struct {
			// Cidr Specifies the IP range in CIDR notation that can be forwarded through this link
			Cidr *string `json:"cidr,omitempty"`

			// Mac The MAC address associated with this forwardable address. If not specified, the link's MAC address will be used.
			Mac *string `json:"mac,omitempty"`
		} `json:"forwardableAddresses,omitempty"`

		// Ip The IP address assigned to this link. If not specified, a unique IP address will be automatically allocated from the subnet CIDR.
		Ip *string `json:"ip,omitempty"`

		// SubnetName The name of the subnet where this link is placed.
		SubnetName *string `json:"subnetName,omitempty"`

		// VpcName Name of the VPC containing this link's subnet.
		VpcName *string `json:"vpcName,omitempty"`
	} `json:"spec,omitempty"`

	// Status Current observed state and conditions of the link
	Status *struct {
		// Configured Indicates if the link is properly configured.
		Configured *bool `json:"configured,omitempty"`

		// Created Indicates if the network device has been created.
		Created *bool `json:"created,omitempty"`

		// ExternalIP Details of the external IP associated with this link. This field will not be set if the link has no external IP.
		ExternalIP *struct {
			Gateway *string `json:"gateway,omitempty"`
			Ip      *string `json:"ip,omitempty"`
			Name    *string `json:"name,omitempty"`
		} `json:"externalIP,omitempty"`

		// GatewayIP Gateway IP address of the subnet.
		GatewayIP *string `json:"gatewayIP,omitempty"`

		// Mac MAC address assigned to this link.
		Mac *string `json:"mac,omitempty"`

		// Mtu Maximum Transmission Unit (MTU) configured on the network device.
		Mtu *int `json:"mtu,omitempty"`

		// Operational Indicates if the link is operational.
		Operational *bool `json:"operational,omitempty"`

		// Ready Indicates if the link is ready for use.
		Ready *bool `json:"ready,omitempty"`
	} `json:"status,omitempty"`
}

// PutComputeV2Thr1WorkspacesWorkspaceUUIDLinksResourceIdJSONBodyApiVersion defines parameters for PutComputeV2Thr1WorkspacesWorkspaceUUIDLinksResourceId.
type PutComputeV2Thr1WorkspacesWorkspaceUUIDLinksResourceIdJSONBodyApiVersion string

// PutComputeV2Thr1WorkspacesWorkspaceUUIDLinksResourceIdJSONBodyKind defines parameters for PutComputeV2Thr1WorkspacesWorkspaceUUIDLinksResourceId.
type PutComputeV2Thr1WorkspacesWorkspaceUUIDLinksResourceIdJSONBodyKind string

// PostComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsJSONRequestBody defines body for PostComputeV2Thr1WorkspacesWorkspaceUUIDExternalIps for application/json ContentType.
type PostComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsJSONRequestBody PostComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsJSONBody

// PutComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsResourceIdJSONRequestBody defines body for PutComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsResourceId for application/json ContentType.
type PutComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsResourceIdJSONRequestBody PutComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsResourceIdJSONBody

// PostComputeV2Thr1WorkspacesWorkspaceUUIDInstancesJSONRequestBody defines body for PostComputeV2Thr1WorkspacesWorkspaceUUIDInstances for application/json ContentType.
type PostComputeV2Thr1WorkspacesWorkspaceUUIDInstancesJSONRequestBody PostComputeV2Thr1WorkspacesWorkspaceUUIDInstancesJSONBody

// PutComputeV2Thr1WorkspacesWorkspaceUUIDInstancesResourceIdJSONRequestBody defines body for PutComputeV2Thr1WorkspacesWorkspaceUUIDInstancesResourceId for application/json ContentType.
type PutComputeV2Thr1WorkspacesWorkspaceUUIDInstancesResourceIdJSONRequestBody PutComputeV2Thr1WorkspacesWorkspaceUUIDInstancesResourceIdJSONBody

// PostComputeV2Thr1WorkspacesWorkspaceUUIDLinksJSONRequestBody defines body for PostComputeV2Thr1WorkspacesWorkspaceUUIDLinks for application/json ContentType.
type PostComputeV2Thr1WorkspacesWorkspaceUUIDLinksJSONRequestBody PostComputeV2Thr1WorkspacesWorkspaceUUIDLinksJSONBody

// PutComputeV2Thr1WorkspacesWorkspaceUUIDLinksResourceIdJSONRequestBody defines body for PutComputeV2Thr1WorkspacesWorkspaceUUIDLinksResourceId for application/json ContentType.
type PutComputeV2Thr1WorkspacesWorkspaceUUIDLinksResourceIdJSONRequestBody PutComputeV2Thr1WorkspacesWorkspaceUUIDLinksResourceIdJSONBody
