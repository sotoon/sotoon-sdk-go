// Package compute provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package compute

import (
	"time"
)

const (
	Bearer_TokenScopes = "Bearer_Token.Scopes"
)

// Defines values for EngineExternalIPApiVersion.
const (
	EngineExternalIPApiVersionComputev2 EngineExternalIPApiVersion = "compute/v2"
)

// Defines values for EngineExternalIPKind.
const (
	ExternalIP EngineExternalIPKind = "ExternalIP"
)

// Defines values for EngineExternalIPListApiVersion.
const (
	EngineExternalIPListApiVersionComputev2 EngineExternalIPListApiVersion = "compute/v2"
)

// Defines values for EngineExternalIPListKind.
const (
	ExternalIPList EngineExternalIPListKind = "ExternalIPList"
)

// Defines values for EngineInstanceTypeApiVersion.
const (
	EngineInstanceTypeApiVersionComputev2 EngineInstanceTypeApiVersion = "compute/v2"
)

// Defines values for EngineInstanceTypeKind.
const (
	InstanceType EngineInstanceTypeKind = "InstanceType"
)

// Defines values for EngineInstanceTypeListKind.
const (
	InstanceTypeList EngineInstanceTypeListKind = "InstanceTypeList"
)

// Defines values for EngineLinkApiVersion.
const (
	EngineLinkApiVersionComputev2 EngineLinkApiVersion = "compute/v2"
)

// Defines values for EngineLinkKind.
const (
	Link EngineLinkKind = "Link"
)

// Defines values for EngineLinkListKind.
const (
	LinkList EngineLinkListKind = "LinkList"
)

// Defines values for EngineSecretApiVersion.
const (
	EngineSecretApiVersionComputev2 EngineSecretApiVersion = "compute/v2"
)

// Defines values for EngineSecretKind.
const (
	Secret EngineSecretKind = "Secret"
)

// Defines values for EngineSecretListApiVersion.
const (
	EngineSecretListApiVersionComputev2 EngineSecretListApiVersion = "compute/v2"
)

// Defines values for EngineSecretListKind.
const (
	SecretList EngineSecretListKind = "SecretList"
)

// Defines values for EngineStatusApiVersion.
const (
	Computev2 EngineStatusApiVersion = "compute/v2"
)

// Defines values for EngineStatusKind.
const (
	Status EngineStatusKind = "Status"
)

// Defines values for EngineStatusStatus.
const (
	Failure EngineStatusStatus = "Failure"
	Success EngineStatusStatus = "Success"
)

// Defines values for V1alpha2InstanceTypeSpecFamily.
const (
	ComputeOptimized V1alpha2InstanceTypeSpecFamily = "Compute Optimized"
	Economy          V1alpha2InstanceTypeSpecFamily = "Economy"
	GeneralPurpose   V1alpha2InstanceTypeSpecFamily = "General Purpose"
	MemoryOptimized  V1alpha2InstanceTypeSpecFamily = "Memory Optimized"
)

// Empty defines model for .
type Empty struct {
	Detail string `json:"detail"`
}

// EngineExternalIP defines model for engineExternalIP.
type EngineExternalIP struct {
	// ApiVersion Version identifier of the API schema
	ApiVersion EngineExternalIPApiVersion `json:"apiVersion"`

	// Kind The string value 'ExternalIP' that identifies the schema
	Kind EngineExternalIPKind `json:"kind"`

	// Metadata Standard resource metadata fields
	Metadata EngineObjectMeta `json:"metadata"`

	// Spec Desired configuration and characteristics for the external ip
	Spec V1alpha2ExternalIPSpec `json:"spec"`

	// Status Current observed state and conditions of the external ip
	Status V1alpha2ExternalIPStatus `json:"status"`
}

// EngineExternalIPApiVersion Version identifier of the API schema
type EngineExternalIPApiVersion string

// EngineExternalIPKind The string value 'ExternalIP' that identifies the schema
type EngineExternalIPKind string

// EngineExternalIPList defines model for engineExternalIPList.
type EngineExternalIPList struct {
	// ApiVersion Version identifier of the API schema
	ApiVersion EngineExternalIPListApiVersion `json:"apiVersion"`

	// Items Collection of ExternalIP resources
	Items []EngineExternalIP `json:"items"`

	// Kind The string value 'ExternalIPList' that identifies the schema
	Kind EngineExternalIPListKind `json:"kind"`

	// Metadata Standard metadata fields
	Metadata V1ListMeta `json:"metadata"`
}

// EngineExternalIPListApiVersion Version identifier of the API schema
type EngineExternalIPListApiVersion string

// EngineExternalIPListKind The string value 'ExternalIPList' that identifies the schema
type EngineExternalIPListKind string

// EngineInstanceType defines model for engineInstanceType.
type EngineInstanceType struct {
	// ApiVersion Version identifier of the API schema
	ApiVersion EngineInstanceTypeApiVersion `json:"apiVersion"`

	// Kind The string value 'InstanceType' that identifies the schema
	Kind EngineInstanceTypeKind `json:"kind"`

	// Metadata Standard resource metadata fields
	Metadata EngineObjectMeta `json:"metadata"`

	// Spec Desired configuration and characteristics for the instance type
	Spec V1alpha2InstanceTypeSpec `json:"spec"`

	// Status Current observed state and conditions of the instance type
	Status V1alpha2InstanceTypeStatus `json:"status"`
}

// EngineInstanceTypeApiVersion Version identifier of the API schema
type EngineInstanceTypeApiVersion string

// EngineInstanceTypeKind The string value 'InstanceType' that identifies the schema
type EngineInstanceTypeKind string

// EngineInstanceTypeList defines model for engineInstanceTypeList.
type EngineInstanceTypeList struct {
	// ApiVersion Version identifier of the API schema
	ApiVersion string `json:"apiVersion"`

	// Items Collection of InstanceType resources
	Items []EngineInstanceType `json:"items"`

	// Kind The string value 'InstanceTypeList' that identifies the schema
	Kind EngineInstanceTypeListKind `json:"kind"`

	// Metadata Standard metadata fields
	Metadata V1ListMeta `json:"metadata"`
}

// EngineInstanceTypeListKind The string value 'InstanceTypeList' that identifies the schema
type EngineInstanceTypeListKind string

// EngineLink defines model for engineLink.
type EngineLink struct {
	// ApiVersion Version identifier of the API schema
	ApiVersion EngineLinkApiVersion `json:"apiVersion"`

	// Kind The string value 'Link' that identifies the schema
	Kind EngineLinkKind `json:"kind"`

	// Metadata Standard resource metadata fields
	Metadata EngineObjectMeta `json:"metadata"`

	// Spec Desired configuration and characteristics for the link
	Spec V1alpha2LinkSpec `json:"spec"`

	// Status Current observed state and conditions of the link
	Status V1alpha2LinkStatus `json:"status"`
}

// EngineLinkApiVersion Version identifier of the API schema
type EngineLinkApiVersion string

// EngineLinkKind The string value 'Link' that identifies the schema
type EngineLinkKind string

// EngineLinkList defines model for engineLinkList.
type EngineLinkList struct {
	// ApiVersion Version identifier of the API schema
	ApiVersion string `json:"apiVersion"`

	// Items Collection of Link resources
	Items []EngineLink `json:"items"`

	// Kind The string value 'LinkList' that identifies the schema
	Kind EngineLinkListKind `json:"kind"`

	// Metadata Standard metadata fields
	Metadata V1ListMeta `json:"metadata"`
}

// EngineLinkListKind The string value 'LinkList' that identifies the schema
type EngineLinkListKind string

// EngineObjectMeta Standard resource metadata fields
type EngineObjectMeta struct {
	// Annotations Annotations are key-value pairs storing additional metadata about resources
	Annotations       map[string]string `json:"annotations"`
	CreationTimestamp V1Time            `json:"creationTimestamp"`
	DeletionTimestamp V1Time            `json:"deletionTimestamp"`

	// Labels Labels are key-value pairs attached to resources for organization and categorization
	Labels map[string]string `json:"labels"`

	// Name User-provided name that uniquely identifies the resource within its workspace and type
	Name string `json:"name"`

	// OwnerReferences References to other resources that own or manage the resource
	OwnerReferences []V1OwnerReference `json:"ownerReferences"`

	// ResourceVersion An opaque value representing the internal version of this object that can be used for optimistic concurrency and change detection
	ResourceVersion *string `json:"resourceVersion,omitempty"`

	// Uid System-generated unique identifier for the resource
	Uid string `json:"uid"`

	// Workspace Unique identifier of the workspace where the resource belongs
	Workspace string `json:"workspace"`
}

// EngineSecret defines model for engineSecret.
type EngineSecret struct {
	// ApiVersion Version identifier of the API schema
	ApiVersion EngineSecretApiVersion `json:"apiVersion"`

	// Data Contains the secret data as base64 encoded strings
	Data *map[string][]byte `json:"data,omitempty"`

	// Immutable If set to true, ensures that data stored in the Secret cannot be updated (only object metadata can be modified)
	Immutable *bool `json:"immutable"`

	// Kind The string value 'Secret' that identifies the schema
	Kind EngineSecretKind `json:"kind"`

	// Metadata Standard resource metadata fields
	Metadata EngineObjectMeta `json:"metadata"`

	// StringData Allows specifying non-binary secret data in string form, merged into the data field on write
	StringData *map[string]string `json:"stringData,omitempty"`

	// Type Used to facilitate programmatic handling of secret data
	Type *string `json:"type,omitempty"`
}

// EngineSecretApiVersion Version identifier of the API schema
type EngineSecretApiVersion string

// EngineSecretKind The string value 'Secret' that identifies the schema
type EngineSecretKind string

// EngineSecretList defines model for engineSecretList.
type EngineSecretList struct {
	// ApiVersion Version identifier of the API schema
	ApiVersion EngineSecretListApiVersion `json:"apiVersion"`

	// Items Collection of Secret resources
	Items []EngineSecret `json:"items"`

	// Kind The string value 'SecretList' that identifies the schema
	Kind EngineSecretListKind `json:"kind"`

	// Metadata Standard metadata fields
	Metadata V1ListMeta `json:"metadata"`
}

// EngineSecretListApiVersion Version identifier of the API schema
type EngineSecretListApiVersion string

// EngineSecretListKind The string value 'SecretList' that identifies the schema
type EngineSecretListKind string

// EngineStatus defines model for engineStatus.
type EngineStatus struct {
	// ApiVersion Version of the Status kind
	ApiVersion EngineStatusApiVersion `json:"apiVersion"`

	// Code HTTP status code corresponding to this status
	Code int32 `json:"code"`

	// Details Extended details about the error
	Details *EngineStatusDetails `json:"details"`

	// Kind Value is always 'Status'
	Kind EngineStatusKind `json:"kind"`

	// Message Human-readable description of the status
	Message *string `json:"message,omitempty"`

	// Metadata Standard metadata fields
	Metadata *V1ListMeta `json:"metadata,omitempty"`

	// Reason Machine-readable description of the cause of the error
	Reason *string `json:"reason,omitempty"`

	// Status Status of the operation
	Status EngineStatusStatus `json:"status"`
}

// EngineStatusApiVersion Version of the Status kind
type EngineStatusApiVersion string

// EngineStatusKind Value is always 'Status'
type EngineStatusKind string

// EngineStatusStatus Status of the operation
type EngineStatusStatus string

// EngineStatusCause defines model for engineStatusCause.
type EngineStatusCause struct {
	// Field Field of the resource that caused the error
	Field *string `json:"field,omitempty"`

	// Message Human-readable description of the cause of the error
	Message string `json:"message"`

	// Reason Machine-readable description of the cause of the error
	Reason string `json:"reason"`
}

// EngineStatusDetails Extended details about the error
type EngineStatusDetails struct {
	// Causes List of problems that caused the error
	Causes *[]EngineStatusCause `json:"causes,omitempty"`

	// Group API group of the resource in the status details
	Group *string `json:"group,omitempty"`

	// Kind Kind of the resource in the status details
	Kind *string `json:"kind,omitempty"`

	// Name Name of the resource in the status details
	Name *string `json:"name,omitempty"`

	// RetryAfterSeconds Number of seconds to wait before retrying
	RetryAfterSeconds *int32 `json:"retryAfterSeconds,omitempty"`
}

// ResourceQuantity defines model for resourceQuantity.
type ResourceQuantity = string

// V1ListMeta Standard metadata fields
type V1ListMeta struct {
	Continue           *string `json:"continue,omitempty"`
	RemainingItemCount *int64  `json:"remainingItemCount"`
	ResourceVersion    *string `json:"resourceVersion,omitempty"`
	SelfLink           *string `json:"selfLink,omitempty"`
}

// V1LocalObjectReference Reference to the external IP resource. If empty, this link does not have an external IP address.
type V1LocalObjectReference struct {
	Name *string `json:"name,omitempty"`
}

// V1ObjectReference Reference to the instance that this link is connected to.
type V1ObjectReference struct {
	ApiVersion      *string `json:"apiVersion,omitempty"`
	FieldPath       *string `json:"fieldPath,omitempty"`
	Kind            *string `json:"kind,omitempty"`
	Name            *string `json:"name,omitempty"`
	Namespace       *string `json:"namespace,omitempty"`
	ResourceVersion *string `json:"resourceVersion,omitempty"`
	Uid             *string `json:"uid,omitempty"`
}

// V1OwnerReference defines model for v1OwnerReference.
type V1OwnerReference struct {
	ApiVersion         string `json:"apiVersion"`
	BlockOwnerDeletion *bool  `json:"blockOwnerDeletion"`
	Controller         *bool  `json:"controller"`
	Kind               string `json:"kind"`
	Name               string `json:"name"`
	Uid                string `json:"uid"`
}

// V1Time defines model for v1Time.
type V1Time = time.Time

// V1alpha1ForwardableAddress defines model for v1alpha1ForwardableAddress.
type V1alpha1ForwardableAddress struct {
	// Cidr Specifies the IP range in CIDR notation that can be forwarded through this link
	Cidr string `json:"cidr"`

	// Mac The MAC address associated with this forwardable address. If not specified, the link's MAC address will be used.
	Mac *string `json:"mac,omitempty"`
}

// V1alpha1IOBandwidthLimits defines model for v1alpha1IOBandwidthLimits.
type V1alpha1IOBandwidthLimits struct {
	Bandwidth map[string]ResourceQuantity `json:"bandwidth"`
	Io        map[string]ResourceQuantity `json:"io"`
}

// V1alpha1InstanceTypeLimits The limits for the instance type, including disk I/O bandwidth.
type V1alpha1InstanceTypeLimits struct {
	Disk V1alpha1IOBandwidthLimits `json:"disk"`
}

// V1alpha2ExternalIPSpec Desired configuration and characteristics for the external ip
type V1alpha2ExternalIPSpec struct {
	// BoundTo Reference to the instance that this link is connected to.
	BoundTo *V1ObjectReference `json:"boundTo"`

	// Ip The allocated external IPv4 address.
	Ip       *string `json:"ip,omitempty"`
	PoolName *string `json:"poolName,omitempty"`

	// Reserved When set to true, prevents the external IP from being garbage collected even if the target object is removed.
	Reserved *bool `json:"reserved,omitempty"`
}

// V1alpha2ExternalIPState Details of the external IP associated with this link. This field will not be set if the link has no external IP.
type V1alpha2ExternalIPState struct {
	Gateway *string `json:"gateway,omitempty"`
	Ip      *string `json:"ip,omitempty"`
	Name    *string `json:"name,omitempty"`
}

// V1alpha2ExternalIPStatus Current observed state and conditions of the external ip
type V1alpha2ExternalIPStatus struct {
	// Gateway The IPv4 gateway address used for routing outgoing traffic from this external IP.
	Gateway *string `json:"gateway,omitempty"`

	// Operational Indicates whether the bound target is running and able to receive traffic.
	Operational *bool `json:"operational,omitempty"`

	// Ready Indicates whether the external IP is fully configured and ready to use.
	Ready *bool `json:"ready,omitempty"`
}

// V1alpha2InstanceTypeSpec Desired configuration and characteristics for the instance type
type V1alpha2InstanceTypeSpec struct {
	// Dedicated Indicates whether the instance type is dedicated or shared.
	Dedicated bool `json:"dedicated"`

	// Family The family of the instance type.
	Family V1alpha2InstanceTypeSpecFamily `json:"family"`

	// Limits The limits for the instance type, including disk I/O bandwidth.
	Limits V1alpha1InstanceTypeLimits `json:"limits"`

	// Public Indicates whether the instance type is publicly available.
	Public bool `json:"public"`

	// Resources The resource specifications for the instance type, including CPU and memory.
	Resources map[string]ResourceQuantity `json:"resources"`

	// Series The specific series of the instance type.
	Series string `json:"series"`
}

// V1alpha2InstanceTypeSpecFamily The family of the instance type.
type V1alpha2InstanceTypeSpecFamily string

// V1alpha2InstanceTypeStatus Current observed state and conditions of the instance type
type V1alpha2InstanceTypeStatus struct {
	// ResizableTo A list of other instance types to which a compute instance with this instance type can be resized.
	ResizableTo *[]string `json:"resizableTo,omitempty"`
}

// V1alpha2LinkSpec Desired configuration and characteristics for the link
type V1alpha2LinkSpec struct {
	// BoundTo Reference to the instance that this link is connected to.
	BoundTo *V1ObjectReference `json:"boundTo"`

	// ExternalIPRef Reference to the external IP resource. If empty, this link does not have an external IP address.
	ExternalIPRef *V1LocalObjectReference `json:"externalIPRef"`

	// ForwardableAddresses List of addresses that can forward traffic through this link.
	ForwardableAddresses *[]V1alpha1ForwardableAddress `json:"forwardableAddresses,omitempty"`

	// Ip The IP address assigned to this link. If not specified, a unique IP address will be automatically allocated from the subnet CIDR.
	Ip *string `json:"ip,omitempty"`

	// SubnetName The name of the subnet where this link is placed.
	SubnetName *string `json:"subnetName,omitempty"`

	// VpcName Name of the VPC containing this link's subnet.
	VpcName *string `json:"vpcName,omitempty"`
}

// V1alpha2LinkStatus Current observed state and conditions of the link
type V1alpha2LinkStatus struct {
	// Configured Indicates if the link is properly configured.
	Configured *bool `json:"configured,omitempty"`

	// Created Indicates if the network device has been created.
	Created *bool `json:"created,omitempty"`

	// ExternalIP Details of the external IP associated with this link. This field will not be set if the link has no external IP.
	ExternalIP *V1alpha2ExternalIPState `json:"externalIP,omitempty"`

	// GatewayIP Gateway IP address of the subnet.
	GatewayIP *string `json:"gatewayIP,omitempty"`

	// Mac MAC address assigned to this link.
	Mac *string `json:"mac,omitempty"`

	// Mtu Maximum Transmission Unit (MTU) configured on the network device.
	Mtu *int `json:"mtu,omitempty"`

	// Operational Indicates if the link is operational.
	Operational *bool `json:"operational,omitempty"`

	// Ready Indicates if the link is ready for use.
	Ready *bool `json:"ready,omitempty"`
}

// PostComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsJSONRequestBody defines body for PostComputeV2Thr1WorkspacesWorkspaceUUIDExternalIps for application/json ContentType.
type PostComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsJSONRequestBody = EngineExternalIP

// PutComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsResourceIdJSONRequestBody defines body for PutComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsResourceId for application/json ContentType.
type PutComputeV2Thr1WorkspacesWorkspaceUUIDExternalIpsResourceIdJSONRequestBody = EngineExternalIP

// PostComputeV2Thr1WorkspacesWorkspaceUUIDInstancesJSONRequestBody defines body for PostComputeV2Thr1WorkspacesWorkspaceUUIDInstances for application/json ContentType.
type PostComputeV2Thr1WorkspacesWorkspaceUUIDInstancesJSONRequestBody = Empty

// PutComputeV2Thr1WorkspacesWorkspaceUUIDInstancesResourceIdJSONRequestBody defines body for PutComputeV2Thr1WorkspacesWorkspaceUUIDInstancesResourceId for application/json ContentType.
type PutComputeV2Thr1WorkspacesWorkspaceUUIDInstancesResourceIdJSONRequestBody = Empty

// PostComputeV2Thr1WorkspacesWorkspaceUUIDLinksJSONRequestBody defines body for PostComputeV2Thr1WorkspacesWorkspaceUUIDLinks for application/json ContentType.
type PostComputeV2Thr1WorkspacesWorkspaceUUIDLinksJSONRequestBody = EngineLink

// PutComputeV2Thr1WorkspacesWorkspaceUUIDLinksResourceIdJSONRequestBody defines body for PutComputeV2Thr1WorkspacesWorkspaceUUIDLinksResourceId for application/json ContentType.
type PutComputeV2Thr1WorkspacesWorkspaceUUIDLinksResourceIdJSONRequestBody = EngineLink
